{"version":3,"file":"static/js/72.1a05bc7f.chunk.js","mappings":"0QAIaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,KAAPD,CAAH,sFAOLE,EAAYF,EAAAA,GAAAA,IAAH,0EAKTG,GAAUH,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,2CAIPI,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,wIASZM,GAAWN,EAAAA,EAAAA,IAAOO,EAAAA,EAAPP,CAAH,iEAKRQ,GAAgBR,EAAAA,EAAAA,IAAOO,EAAAA,EAAAA,SAAPP,CAAH,iEAoBbS,IAdYT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,kEAKGA,EAAAA,GAAAA,IAAH,sJASEA,EAAAA,GAAAA,GAAH,iG,6BCzCN,SAASW,IACpB,MAAeR,EAAQS,UAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA6BC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAtCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAWnB,OACA,8BACI,SAAClB,EAAD,WACA,UAACC,EAAD,CACIU,KAAMA,EACNQ,KAAK,WACLC,SAfS,SAAAC,GACjB,IAAQF,EAAmCE,EAAnCF,KAAMG,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,SAEjBA,IAFuCF,EAAZG,UAG3BZ,GAASa,EAAAA,EAAAA,IAAS,CAAEN,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,MAChCN,IAAcC,GAASP,EAAKe,cAEhC,EASOC,cAAe,CACfC,UAAW,CAAC,WAAY,WAAY,QACpCC,OAAQ,MAERC,oBAAkB,EARtB,WAUI,SAACvB,EAAD,UAAU,uBACV,SAACV,EAAD,CACAsB,KAAK,OACLY,MAAM,OACNC,MAAO,CACH,CACAC,UAAU,EACVC,QAAS,0BACTC,YAAY,IAPhB,UAWA,SAAC/B,EAAD,OAEA,SAACP,EAAD,CACAsB,KAAK,QACLY,MAAM,SACNC,MAAO,CACH,CACAI,KAAM,QACNF,QAAS,kCAET,CACAD,UAAU,EACVC,QAAS,8BAVb,UAcA,SAAC9B,EAAD,OAEA,SAACP,EAAD,CACAsB,KAAK,WACLY,MAAM,WACNC,MAAO,CACH,CACAC,UAAU,EACVC,QAAS,gCAGbG,aAAW,EATX,UAWA,SAAC/B,EAAD,CACIgC,QAAQ,uCACRC,MAAM,kHAGV,SAAC1C,EAAD,CACAsB,KAAK,UACLY,MAAM,mBACNS,aAAc,CAAC,YACfH,aAAW,EACXL,MAAO,CACH,CACAC,UAAU,EACVC,QAAS,iCAIT,gBAAGO,EAAH,EAAGA,cAAH,MAAwB,CACxBC,UADwB,SACdC,EAAGC,GACT,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACX,IAAIC,MACJ,qDAJGF,QAAQG,SAOlB,EAVD,GAZJ,UA0BA,SAAC1C,EAAD,OAGA,UAACT,EAAD,WACC,KACD,SAACK,EAAD,CAAckC,KAAK,UAAUa,SAAS,SAAtC,SAA+C,aAE/B,aAO3B,C","sources":["pages/register/register.styled.jsx","pages/register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Button, Form, Input } from 'antd';\nimport { Link } from 'react-router-dom';\n\nexport const Label = styled(Form.Item)`\n    label {\n    width: 150px;\n    padding-top: 8px;\n    }\n`;\n\nexport const Container = styled.div`\n    padding-left: 300px;\n    padding-top: 70px;\n`;\n\nexport const FormReg = styled(Form)`\n    width: 400px;\n`;\n\nexport const SubmitButton = styled(Button)`\n    width: 100px;\n    height: 40px;\n    margin-left: 150px;\n    display: block;\n    font-size: 18px;\n    \n`;\n\nexport const InputReg = styled(Input)`\n    height: 40px;\n    font-size: 18px;\n`;\n\nexport const InputPassword = styled(Input.Password)`\n    height: 40px;\n    font-size: 18px;\n`;\n\n\nexport const LinkToLog = styled(Link)`\n    font-size: 18px;\n    margin: 0 4px;\n`;\n\nexport const ContLabel = styled.div`\n    font-size: 18px;\n    line-height: 1.11;\n    position: absolute;\n    top: -1%;\n    left: 50%;\n    margin-left: 60px;\n`;\n\nexport const TitleReg = styled.h2`\n    margin-left: 30%;\n    margin-bottom: 15px;\n    color: #2e2d2dbc;\n`;","import {\n    Label,\n    FormReg,\n    SubmitButton,\n    InputReg,\n    InputPassword,\n    Container,\n    TitleReg,\n} from './register.styled';\n\nimport { register } from 'Redux/authorization/functions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function Register() {\n    const [form] = FormReg.useForm();\n    const dispatch = useDispatch();\n    const { isLoading, error } = useSelector(state => state.auth);\n\n    const onFinish = values => {\n    const { name, email, password, confirm } = values;\n\n    if (password === confirm) {\n        dispatch(register({ name, email, password })); \n        !isLoading && !error && form.resetFields(); \n    }\n    };\n\n    return (\n    <section>\n        <Container>\n        <FormReg\n            form={form}\n            name=\"register\"\n            onFinish={onFinish}\n            initialValues={{\n            residence: ['zhejiang', 'hangzhou', 'xihu'], \n            prefix: '86',\n            }}\n            scrollToFirstError\n        >\n            <TitleReg>Register new user</TitleReg>\n            <Label\n            name=\"name\"\n            label=\"Name\"\n            rules={[\n                {\n                required: true,\n                message: 'Please input your name!',\n                whitespace: true,\n                },\n            ]}\n            >\n            <InputReg />\n            </Label>\n            <Label\n            name=\"email\"\n            label=\"E-mail\"\n            rules={[\n                {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n                },\n                {\n                required: true,\n                message: 'Please input your E-mail!',\n                },\n            ]}\n            >\n            <InputReg />\n            </Label>\n            <Label\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n                {\n                required: true,\n                message: 'Please input your password!',\n                },\n            ]}\n            hasFeedback\n            >\n            <InputPassword\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}\"\n                title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 7 or more characters\"\n            />\n            </Label>\n            <Label\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n                {\n                required: true,\n                message: 'Please confirm your password!',\n                },\n\n\n                ({ getFieldValue }) => ({\n                validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                    }\n                    return Promise.reject(\n                        new Error(\n                        'The two passwords that you entered do not match!'\n                    )\n                    );\n                },\n                }),\n            ]}\n            >\n            <InputPassword />\n            </Label>\n\n            <Label>\n            {' '}\n            <SubmitButton type=\"default\" htmlType=\"submit\">\n                Register\n            </SubmitButton>{' '}\n            \n            </Label>\n        </FormReg>\n        </Container>\n    </section>\n    );\n}"],"names":["Label","styled","Form","Container","FormReg","SubmitButton","Button","InputReg","Input","InputPassword","TitleReg","Link","Register","useForm","form","dispatch","useDispatch","useSelector","state","auth","isLoading","error","name","onFinish","values","email","password","confirm","register","resetFields","initialValues","residence","prefix","scrollToFirstError","label","rules","required","message","whitespace","type","hasFeedback","pattern","title","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","htmlType"],"sourceRoot":""}